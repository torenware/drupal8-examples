<?php
/**
 * @file
 * Examples demonstrating the Drupal File API (and Stream Wrappers).
 */

/**
 * @defgroup file_example Example: Files
 * @ingroup examples
 * @{
 * Examples demonstrating the Drupal File API (and Stream Wrappers).
 *
 * The File Example module is a part of the Examples for Developers Project
 * and provides various Drupal File API Examples. You can download and
 * experiment with this code at the
 * @link http://drupal.org/project/examples Examples for Developers project page. @endlink
 *
 * See @link http://drupal.org/node/555118 Drupal File API @endlink for handbook
 * documentation on the File API and
 * @link file File summary on api.drupal.org @endlink for the function summary.
 */

/**
 * Control access to private file downloads and specify HTTP headers.
 *
 * This hook allows modules to enforce permissions on file downloads whenever
 * Drupal is handling file download, as opposed to the web server bypassing
 * Drupal and returning the file from a public directory. Modules can also
 * provide headers to specify information like the file's name or MIME type.
 *
 * For our example module, we want to be able to see the temporary, private,
 * and session (our test stream wrapper / file scheme).  In general, you really
 * would NEVER give general access to your temporary, and you certainly wouldn't
 * do it for your private files.  So we demostrate this here, but kids, don't
 * try this at home ;-)  Remember: keep your files secure!
 *
 * @param string $uri
 *   The URI of the file.
 *
 * @return mixed
 *   If the user does not have permission to access the file, return -1. If the
 *   user has permission, return an array with the appropriate headers. If the
 *   file is not controlled by the current module, the return value should be
 *   NULL.
 *
 * @see file_download()
 */
function file_example_file_download($uri) {
  // Check to see if this is a config download.
  $scheme = file_uri_scheme($uri);
  if (in_array($scheme, ['private', 'temporary', 'session'])) {
    $permission = "read $scheme files";
    $current_user = \Drupal::currentUser();
    $account = $current_user->getAccount();
    if ($account->hasPermission($permission)) {
      return [
        'Content-Type: text/plain',
      ];
    }
  }
}

/**
 * @} End of "defgroup file_example".
 */
